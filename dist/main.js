/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_fetch_stock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/fetch_stock_data */ \"./src/scripts/fetch_stock_data.js\");\n/* harmony import */ var _scripts_create_graph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/create_graph */ \"./src/scripts/create_graph.js\");\n// import Example from \"./scripts/example\"\n\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const main = document.getElementById(\"main\")\n//     new Example(main)\n\n//     const button = document.getElementById(\"fetchStock\");\n\n//     button.addEventListener(\"click\", () => {\n//       new FetchStockData(main);\n//     });\n\n//     button.addEventListener(\"click\", async () => {\n//       const fetchStockData = new FetchStockData(main);\n//       const { dates, closingPrices, organizedData } = await fetchStockData.getStockData();\n//       new CreateVisualsChart(main, organizedData);\n//     });\n//   });\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.getElementById(\"main\");\n  const button = document.getElementById(\"fetchStock\");\n  button.addEventListener(\"click\", async () => {\n    const fetchStockData = new _scripts_fetch_stock_data__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main);\n    const stockData = await fetchStockData.getStockData();\n    new _scripts_create_graph__WEBPACK_IMPORTED_MODULE_1__[\"default\"](main, stockData);\n  });\n});\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   console.log(\"Hello world!!!\")\n//   console.log(getData)\n\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDd0Q7QUFDQTs7QUFFeEQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUUsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxNQUFNO0VBQ2xELE1BQU1DLElBQUksR0FBR0YsUUFBUSxDQUFDRyxjQUFjLENBQUMsTUFBTSxDQUFDO0VBQzVDLE1BQU1DLE1BQU0sR0FBR0osUUFBUSxDQUFDRyxjQUFjLENBQUMsWUFBWSxDQUFDO0VBRXBEQyxNQUFNLENBQUNILGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFZO0lBQzNDLE1BQU1JLGNBQWMsR0FBRyxJQUFJUCxpRUFBYyxDQUFDSSxJQUFJLENBQUM7SUFDL0MsTUFBTUksU0FBUyxHQUFHLE1BQU1ELGNBQWMsQ0FBQ0UsWUFBWSxDQUFDLENBQUM7SUFDckQsSUFBSVIsNkRBQWtCLENBQUNHLElBQUksRUFBRUksU0FBUyxDQUFDO0VBQ3pDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQzs7QUFNRjtBQUNBO0FBQ0E7O0FBSUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9ibG9vbWJlcmcvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgRXhhbXBsZSBmcm9tIFwiLi9zY3JpcHRzL2V4YW1wbGVcIlxuaW1wb3J0IEZldGNoU3RvY2tEYXRhIGZyb20gXCIuL3NjcmlwdHMvZmV0Y2hfc3RvY2tfZGF0YVwiO1xuaW1wb3J0IENyZWF0ZVZpc3VhbHNDaGFydCBmcm9tIFwiLi9zY3JpcHRzL2NyZWF0ZV9ncmFwaFwiO1xuXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4vLyAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKVxuLy8gICAgIG5ldyBFeGFtcGxlKG1haW4pXG5cbi8vICAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZldGNoU3RvY2tcIik7XG5cbi8vICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbi8vICAgICAgIG5ldyBGZXRjaFN0b2NrRGF0YShtYWluKTtcbi8vICAgICB9KTtcblxuLy8gICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgKCkgPT4ge1xuLy8gICAgICAgY29uc3QgZmV0Y2hTdG9ja0RhdGEgPSBuZXcgRmV0Y2hTdG9ja0RhdGEobWFpbik7XG4vLyAgICAgICBjb25zdCB7IGRhdGVzLCBjbG9zaW5nUHJpY2VzLCBvcmdhbml6ZWREYXRhIH0gPSBhd2FpdCBmZXRjaFN0b2NrRGF0YS5nZXRTdG9ja0RhdGEoKTtcbi8vICAgICAgIG5ldyBDcmVhdGVWaXN1YWxzQ2hhcnQobWFpbiwgb3JnYW5pemVkRGF0YSk7XG4vLyAgICAgfSk7XG4vLyAgIH0pO1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZldGNoU3RvY2tcIik7XG5cbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZmV0Y2hTdG9ja0RhdGEgPSBuZXcgRmV0Y2hTdG9ja0RhdGEobWFpbik7XG4gICAgY29uc3Qgc3RvY2tEYXRhID0gYXdhaXQgZmV0Y2hTdG9ja0RhdGEuZ2V0U3RvY2tEYXRhKCk7XG4gICAgbmV3IENyZWF0ZVZpc3VhbHNDaGFydChtYWluLCBzdG9ja0RhdGEpO1xuICB9KTtcbn0pO1xuXG5cblxuXG5cbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4vLyAgIGNvbnNvbGUubG9nKFwiSGVsbG8gd29ybGQhISFcIilcbi8vICAgY29uc29sZS5sb2coZ2V0RGF0YSlcblxuXG5cbi8vIH0pO1xuIl0sIm5hbWVzIjpbIkZldGNoU3RvY2tEYXRhIiwiQ3JlYXRlVmlzdWFsc0NoYXJ0IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwibWFpbiIsImdldEVsZW1lbnRCeUlkIiwiYnV0dG9uIiwiZmV0Y2hTdG9ja0RhdGEiLCJzdG9ja0RhdGEiLCJnZXRTdG9ja0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/create_graph.js":
/*!*************************************!*\
  !*** ./src/scripts/create_graph.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _fetch_stock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch_stock_data */ \"./src/scripts/fetch_stock_data.js\");\n\nclass CreateVisualsChart {\n  constructor(ele, data) {\n    this.ele = ele;\n    this.data = data;\n    this.createChart();\n    // this.ele.innerHTML = \"<h1>It's ALIVE!!!</h1>\";\n    // this.handleClick = this.handleClick.bind(this);\n\n    // this.ele.addEventListener(\"click\", this.handleClick);\n  }\n\n  // createChart() {\n  //     const dataset = this.data.organizedData\n  //     const margin = {top: 20, right: 20, bottom:40, left:20 };\n  //     const width = 1600 - margin.left - margin.right;\n  //     const height = 800 - margin.top - margin.bottom;\n  //     const x = d3.scaleTime()\n  //         .range([0, width]);\n  //     const y = d3.scale.Linear()\n  //         .range([height, 0]);\n  //     const svg = d3.select(\".chart-main\")\n  //         .append(\"svg\").attr(\"width\", width + margin.left + margin.right)\n  //                       .attr(\"height\", height + margin.top + margin.bottom)\n  //         .append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  //     x.domain(d3.extent(dataset,d => d.date));\n  //     y.domain([0, d3.max(dataset, d => d.value)]);\n  //     svg.append(\"g\")\n  //             .attr(\"transform\", `translate(0,${height})`)\n  //             .call(d3.axisBottom(x)\n  //                 .ticks(d3.timeMonth.every(1))\n  //                 .tickFormat(d3.timeMonth.format(\"MMM D, YYYY\")));\n  //     svg.append(\"g\")\n  //         .call(d3.axisLeft(y));\n  //     const line = d3.line()\n  //         .x(d => x(d.date))\n  //         .y(d => y(d.value));\n  //     svg.append(\"path\")\n  //         .datum(dataset)\n  //         .attr(\"fill\",\"none \")\n  //         .attr(\"stroke\",\"none\")\n  //         .attr(\"stroke-width\", 2)\n  //         .attr(\"stroke-opacity\",6)\n  //         .attr(\"stroke-linecap\", \"round\")\n  //         .attr(\"stroke-linejoin\", \"round\")\n  //         .attr(\"d\", line);\n  // }\n  // createChart() {\n  //     const dataset = this.data.organizedData\n  //     const margin = { top: 20, right: 20, bottom: 40, left: 20 };\n  //     const width = 1600 - margin.left - margin.right;\n  //     const height = 800 - margin.top - margin.bottom;\n  //     const x = d3.scaleTime().range([0, width]);\n  //     const y = d3.scaleLinear().range([height, 0]);\n  //     const svg = d3\n  //         .select(\".chart-main\")\n  //         .append(\"svg\")\n  //         .attr(\"width\", width + margin.left + margin.right)\n  //         .attr(\"height\", height + margin.top + margin.bottom)\n  //         .append(\"g\")\n  //         .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  //     x.domain(d3.extent(dataset, (d) => d.date));\n  //     y.domain([0, d3.max(dataset, (d) => d.value)]);\n  //     svg\n  //         .append(\"g\")\n  //         .attr(\"transform\", `translate(0,${height})`)\n  //         .call(\n  //             d3.axisBottom(x)\n  //                 .ticks(d3.timeMonth.every(1))\n  //                 .tickFormat(d3.timeFormat(\"%b %d, %Y\"))\n  //         );\n  //     svg.append(\"g\").call(d3.axisLeft(y));\n  //     const line = d3\n  //         .line()\n  //         .x((d) => x(d.date))\n  //         .y((d) => y(d.value));\n  //     svg\n  //         .append(\"path\")\n  //         .datum(dataset)\n  //         .attr(\"fill\", \"none\")\n  //         .attr(\"stroke\", \"none\")\n  //         .attr(\"stroke-width\", 2)\n  //         .attr(\"stroke-opacity\", 6)\n  //         .attr(\"stroke-linecap\", \"round\")\n  //         .attr(\"stroke-linejoin\", \"round\")\n  //         .attr(\"d\", line);\n  // }\n\n  // createChart() {\n  //     const dataset = this.data.organizedData // Make sure the dataset is accessible within the scope\n  //     const margin = { top: 20, right: 20, bottom: 40, left: 20 };\n  //     const width = 1600 - margin.left - margin.right;\n  //     const height = 800 - margin.top - margin.bottom;\n  //     const x = d3.scaleTime().range([0, width]); // Fix function name to scaleTime\n  //     const y = d3.scaleLinear().range([height, 0]); // Fix function name to scaleLinear\n  //     const svg = d3\n  //       .select(\".chart-main\")\n  //       .append(\"svg\")\n  //       .attr(\"width\", width + margin.left + margin.right)\n  //       .attr(\"height\", height + margin.top + margin.bottom)\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  //     x.domain(d3.extent(dataset, (d) => d.Date));\n  //     y.domain([0, d3.max(dataset, (d) => d.Close)]);\n  //     svg\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(0,${height})`)\n  //       .call(\n  //         d3.axisBottom(x)\n  //           .ticks(d3.timeMonth.every(1))\n  //           .tickFormat(d3.timeFormat(\"%b %d\")) // Use timeFormat to format tick labels\n  //       );\n  //     svg.append(\"g\").call(d3.axisLeft(y));\n  //     const line = d3\n  //       .line()\n  //       .x((d) => x(d.Date))\n  //       .y((d) => y(d.Close));\n  //     svg\n  //       .append(\"path\")\n  //       .datum(dataset)\n  //       .attr(\"fill\", \"none\")\n  //       .attr(\"stroke\", \"blue\") // Set stroke color for the line\n  //       .attr(\"stroke-width\", 2)\n  //       .attr(\"d\", line);\n  //   }\n\n  // createChart() {\n  //     const dataset = this.data.organizedData;\n  //     const margin = { top: 20, right: 20, bottom: 40, left: 40 };\n  //     const width = 1600 - (margin.left - margin.right);\n  //     const height = 800 - (margin.top - margin.bottom);\n  //     const x = d3.scaleTime().range([0, width]);\n  //     const y = d3.scaleLinear().range([height, 0]);\n  //     const svg = d3\n  //       .select(\".chart-main\")\n  //       .append(\"svg\")\n  //       .attr(\"width\", width + margin.left + margin.right)\n  //       .attr(\"height\", height + margin.top + margin.bottom)\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  //     x.domain(d3.extent(dataset, (d) => d.Date));\n  //     y.domain([0, d3.max(dataset, (d) => d.Close)]);\n  //     svg\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(0,${height})`)\n  //       .call(\n  //         d3.axisBottom(x)\n  //           .ticks(d3.timeMonth.every(1))\n  //           .tickFormat(d3.timeFormat(\"%a %d\")) // Format the tick labels\n  //       );\n  //     svg.append(\"g\").call(d3.axisLeft(y));\n  //     const line = d3\n  //       .line()\n  //       .x((d) => x(d.Date))\n  //       .y((d) => y(d.Close));\n  //     svg\n  //       .append(\"path\")\n  //       .datum(dataset)\n  //       .attr(\"fill\", \"none\")\n  //       .attr(\"stroke\", \"blue\")\n  //       .attr(\"stroke-width\", 2)\n  //       .attr(\"d\", line);\n  //   }\n  // createChart() {\n  //     const dataset = this.data.organizedData;\n  //     const margin = { top: 20, right: 20, bottom: 40, left: 40 };\n  //     const width = 900 - margin.left - margin.right;\n  //     const height = 650 - margin.top - margin.bottom;\n  //     const x = d3.scaleTime().range([0, width]);\n  //     const y = d3.scaleLinear().range([height, 0]);\n  //     const svg = d3\n  //       .select(\".chart-main\")\n  //       .attr(\"width\", width + margin.left + margin.right)\n  //       .attr(\"height\", height + margin.top + margin.bottom)\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  //     x.domain(d3.extent(dataset, (d) => d.Date));\n  //     y.domain([0, d3.max(dataset, (d) => d.Close)]);\n  //     svg\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(0, ${height})`)\n  //       .call(d3.axisBottom(x)\n  //         .ticks(d3.timeMonth.every(1))\n  //         .tickFormat(d3.timeFormat(\"%b %d, %Y\")))\n  //       .selectAll(\"text\")\n  //       .style(\"text-anchor\", \"end\")\n  //       .attr(\"dx\", \"-0.8em\")\n  //       .attr(\"dy\", \"0.15em\")\n  //       .attr(\"transform\", \"rotate(-65)\");\n  //     svg.append(\"g\").call(d3.axisLeft(y));\n  //     const line = d3\n  //       .line()\n  //       .x((d) => x(d.Date))\n  //       .y((d) => y(d.Close));\n  //     svg\n  //       .append(\"path\")\n  //       .datum(dataset)\n  //       .attr(\"fill\", \"none\")\n  //       .attr(\"stroke\", \"blue\")\n  //       .attr(\"stroke-width\", 2)\n  //       .attr(\"d\", line);\n  //   }\n\n  createChart() {\n    const dataset = this.data.organizedData;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 60,\n      left: 40\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const x = d3.scaleTime().range([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n    const svg = d3.select(\".chart-main\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Calculate the minimum and maximum dates\n    const minDate = d3.min(dataset, d => d.Date);\n    const maxDate = d3.max(dataset, d => d.Date);\n    x.domain([minDate, maxDate]);\n    y.domain([0, d3.max(dataset, d => d.Close)]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x).ticks(d3.timeMonth.every(1)).tickFormat(d3.timeFormat(\"%b %d, %Y\"))).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-0.8em\").attr(\"dy\", \"0.15em\").attr(\"transform\", \"rotate(-65)\");\n    svg.append(\"g\").call(d3.axisLeft(y));\n    const line = d3.line().x(d => x(d.Date)).y(d => y(d.Close));\n    svg.append(\"path\").datum(dataset).attr(\"fill\", \"none\").attr(\"stroke\", \"blue\").attr(\"stroke-width\", 2).attr(\"d\", line);\n  }\n\n  // createChart() {\n  //     const dataset = this.data.organizedData;\n  //     const margin = { top: 20, right: 20, bottom: 40, left: 20 };\n  //     const width = 1600 - margin.left - margin.right;\n  //     const height = 800 - margin.top - margin.bottom;\n  //     const x = d3.scaleTime().range([0, width]);\n  //     const y = d3.scaleLinear().range([height, 0]);\n  //     const svg = d3\n  //       .select(\".chart-main\")\n  //       .append(\"svg\")\n  //       .attr(\"width\", width + margin.left + margin.right)\n  //       .attr(\"height\", height + margin.top + margin.bottom)\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n  //     x.domain(d3.extent(dataset, (d) => d.Date));\n  //     y.domain([0, d3.max(dataset, (d) => d.Close)]);\n\n  //     svg\n  //       .append(\"g\")\n  //       .attr(\"transform\", `translate(0,${height})`)\n  //       .call(\n  //         d3.axisBottom(x).ticks(d3.timeMonth.every(1)).tickFormat(d3.timeFormat(\"%b %d, %Y\"))\n  //       );\n\n  //     svg.append(\"g\").call(d3.axisLeft(y));\n\n  //     const line = d3\n  //       .line()\n  //       .x((d) => x(d.Date))\n  //       .y((d) => y(d.Close));\n\n  //     svg\n  //       .append(\"path\")\n  //       .datum(dataset)\n  //       .attr(\"fill\", \"none\")\n  //       .attr(\"stroke\", \"blue\")\n  //       .attr(\"stroke-width\", 2)\n  //       .attr(\"d\", line);\n  //   }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CreateVisualsChart);\n\n//     // Declare the chart dimensions and margins.\n\n//     // Declare the x (horizontal position) scale.\n//     const x = d3.scaleUtc()\n//         .domain([new Date(\"2023-01-01\"), new Date(\"2024-01-01\")])\n//         .range([marginLeft, width - marginRight]);\n\n//     // Declare the y (vertical position) scale.\n//     const y = d3.scaleLinear()\n//         .domain([0, 100])\n//         .range([height - marginBottom, marginTop]);\n\n//     // Create the SVG container.\n//     const svg = d3.create(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height);\n\n//     // Add the x-axis.\n//     svg.append(\"g\")\n//         .attr(\"transform\", `translate(0,${height - marginBottom})`)\n//         .call(d3.axisBottom(x));\n\n//     // Add the y-axis.\n//     svg.append(\"g\")\n//         .attr(\"transform\", `translate(${marginLeft},0)`)\n//         .call(d3.axisLeft(y));\n\n//     // Return the SVG element.\n//     return svg.node();\n//   }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/create_graph.js\n");

/***/ }),

/***/ "./src/scripts/fetch_stock_data.js":
/*!*****************************************!*\
  !*** ./src/scripts/fetch_stock_data.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass FetchStockData {\n  constructor(ele) {\n    this.ele = ele;\n    // this.ele.innerHTML = \"<h1>It's ALIVE!!!</h1>\";\n    // this.handleClick = this.handleClick.bind(this);\n    // this.ele.addEventListener(\"click\", this.handleClick);\n    this.getStockData();\n  }\n  async getStockData() {\n    const url = \"https://apistocks.p.rapidapi.com/daily?symbol=AAPL&dateStart=2020-06-01&dateEnd=2023-06-29\";\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"X-RapidAPI-Key\": \"be2c5cf9d2mshdd2979e94314598p19c3dbjsnee3000224bd0\",\n        \"X-RapidAPI-Host\": \"apistocks.p.rapidapi.com\"\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const result = await response.json();\n      const ticker = this.getTicker(result);\n      const closingPrices = this.getClosingPrices(result);\n      const dates = this.getDates(result);\n      const organizedData = await this.organizedData(dates, closingPrices);\n      console.log(\"Ticker:\", ticker);\n      //   console.log(\"Closing Prices:\", closingPrices);\n      //   console.log(\"Dates:\", dates);\n      console.log(\"Organized Data:\", organizedData);\n      return {\n        organizedData\n      };\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  getTicker(response) {\n    return response.Metadata.Symbol;\n  }\n  getClosingPrices(response) {\n    return response.Results.map(result => result.Close);\n  }\n  getDates(response) {\n    return response.Results.map(result => result.Date);\n  }\n  async organizedData(dates, closingPrices) {\n    return dates.map((date, index) => {\n      return {\n        Date: new Date(Date.parse(date)),\n        Close: closingPrices[index]\n      };\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (FetchStockData);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9mZXRjaF9zdG9ja19kYXRhLmpzIiwibWFwcGluZ3MiOiI7QUFFQSxNQUFNQSxjQUFjLENBQUM7RUFDakJDLFdBQVdBLENBQUNDLEdBQUcsRUFBRTtJQUNiLElBQUksQ0FBQ0EsR0FBRyxHQUFHQSxHQUFHO0lBQ2Q7SUFDQTtJQUNBO0lBQ0EsSUFBSSxDQUFDQyxZQUFZLENBQUMsQ0FBQztFQUV2QjtFQUlBLE1BQU1BLFlBQVlBLENBQUEsRUFBRztJQUNqQixNQUFNQyxHQUFHLEdBQ1AsNEZBQTRGO0lBQzlGLE1BQU1DLE9BQU8sR0FBRztNQUNkQyxNQUFNLEVBQUUsS0FBSztNQUNiQyxPQUFPLEVBQUU7UUFDUCxnQkFBZ0IsRUFBRSxvREFBb0Q7UUFDdEUsaUJBQWlCLEVBQUU7TUFDckI7SUFDRixDQUFDO0lBRUQsSUFBSTtNQUNGLE1BQU1DLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUNMLEdBQUcsRUFBRUMsT0FBTyxDQUFDO01BQzFDLE1BQU1LLE1BQU0sR0FBRyxNQUFNRixRQUFRLENBQUNHLElBQUksQ0FBQyxDQUFDO01BR3BDLE1BQU1DLE1BQU0sR0FBRyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0gsTUFBTSxDQUFDO01BR3JDLE1BQU1JLGFBQWEsR0FBRyxJQUFJLENBQUNDLGdCQUFnQixDQUFDTCxNQUFNLENBQUM7TUFHbkQsTUFBTU0sS0FBSyxHQUFHLElBQUksQ0FBQ0MsUUFBUSxDQUFDUCxNQUFNLENBQUM7TUFFbkMsTUFBTVEsYUFBYSxHQUFHLE1BQU0sSUFBSSxDQUFDQSxhQUFhLENBQUNGLEtBQUssRUFBRUYsYUFBYSxDQUFDO01BRXBFSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUVSLE1BQU0sQ0FBQztNQUNoQztNQUNBO01BQ0VPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixFQUFFRixhQUFhLENBQUM7TUFFN0MsT0FBTztRQUFDQTtNQUFhLENBQUM7SUFFeEIsQ0FBQyxDQUFDLE9BQU9HLEtBQUssRUFBRTtNQUNkRixPQUFPLENBQUNFLEtBQUssQ0FBQ0EsS0FBSyxDQUFDO0lBQ3RCO0VBQ0Y7RUFFQVIsU0FBU0EsQ0FBQ0wsUUFBUSxFQUFFO0lBQ2xCLE9BQU9BLFFBQVEsQ0FBQ2MsUUFBUSxDQUFDQyxNQUFNO0VBQ2pDO0VBRUFSLGdCQUFnQkEsQ0FBQ1AsUUFBUSxFQUFFO0lBQ3pCLE9BQU9BLFFBQVEsQ0FBQ2dCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFZixNQUFNLElBQUtBLE1BQU0sQ0FBQ2dCLEtBQUssQ0FBQztFQUN2RDtFQUVBVCxRQUFRQSxDQUFDVCxRQUFRLEVBQUU7SUFDakIsT0FBT0EsUUFBUSxDQUFDZ0IsT0FBTyxDQUFDQyxHQUFHLENBQUVmLE1BQU0sSUFBS0EsTUFBTSxDQUFDaUIsSUFBSSxDQUFDO0VBQ3REO0VBR0YsTUFBTVQsYUFBYUEsQ0FBQ0YsS0FBSyxFQUFFRixhQUFhLEVBQUU7SUFDdEMsT0FBT0UsS0FBSyxDQUFDUyxHQUFHLENBQUMsQ0FBQ0csSUFBSSxFQUFFQyxLQUFLLEtBQUs7TUFDOUIsT0FBTztRQUNIRixJQUFJLEVBQUUsSUFBSUEsSUFBSSxDQUFDQSxJQUFJLENBQUNHLEtBQUssQ0FBQ0YsSUFBSSxDQUFDLENBQUM7UUFDaENGLEtBQUssRUFBRVosYUFBYSxDQUFDZSxLQUFLO01BQzlCLENBQUM7SUFDTCxDQUFDLENBQUM7RUFDTjtBQUtKO0FBR0EsK0RBQWU3QixjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlfYmxvb21iZXJnLy4vc3JjL3NjcmlwdHMvZmV0Y2hfc3RvY2tfZGF0YS5qcz9jNTQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5jbGFzcyBGZXRjaFN0b2NrRGF0YSB7XG4gICAgY29uc3RydWN0b3IoZWxlKSB7XG4gICAgICAgIHRoaXMuZWxlID0gZWxlO1xuICAgICAgICAvLyB0aGlzLmVsZS5pbm5lckhUTUwgPSBcIjxoMT5JdCdzIEFMSVZFISEhPC9oMT5cIjtcbiAgICAgICAgLy8gdGhpcy5oYW5kbGVDbGljayA9IHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICAgICAgLy8gdGhpcy5lbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2spO1xuICAgICAgICB0aGlzLmdldFN0b2NrRGF0YSgpO1xuXG4gICAgfVxuXG5cblxuICAgIGFzeW5jIGdldFN0b2NrRGF0YSgpIHtcbiAgICAgICAgY29uc3QgdXJsID1cbiAgICAgICAgICBcImh0dHBzOi8vYXBpc3RvY2tzLnAucmFwaWRhcGkuY29tL2RhaWx5P3N5bWJvbD1BQVBMJmRhdGVTdGFydD0yMDIwLTA2LTAxJmRhdGVFbmQ9MjAyMy0wNi0yOVwiO1xuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIlgtUmFwaWRBUEktS2V5XCI6IFwiYmUyYzVjZjlkMm1zaGRkMjk3OWU5NDMxNDU5OHAxOWMzZGJqc25lZTMwMDAyMjRiZDBcIixcbiAgICAgICAgICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IFwiYXBpc3RvY2tzLnAucmFwaWRhcGkuY29tXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cblxuICAgICAgICAgIGNvbnN0IHRpY2tlciA9IHRoaXMuZ2V0VGlja2VyKHJlc3VsdCk7XG5cblxuICAgICAgICAgIGNvbnN0IGNsb3NpbmdQcmljZXMgPSB0aGlzLmdldENsb3NpbmdQcmljZXMocmVzdWx0KTtcblxuXG4gICAgICAgICAgY29uc3QgZGF0ZXMgPSB0aGlzLmdldERhdGVzKHJlc3VsdCk7XG5cbiAgICAgICAgICBjb25zdCBvcmdhbml6ZWREYXRhID0gYXdhaXQgdGhpcy5vcmdhbml6ZWREYXRhKGRhdGVzLCBjbG9zaW5nUHJpY2VzKTtcblxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiVGlja2VyOlwiLCB0aWNrZXIpO1xuICAgICAgICAvLyAgIGNvbnNvbGUubG9nKFwiQ2xvc2luZyBQcmljZXM6XCIsIGNsb3NpbmdQcmljZXMpO1xuICAgICAgICAvLyAgIGNvbnNvbGUubG9nKFwiRGF0ZXM6XCIsIGRhdGVzKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIk9yZ2FuaXplZCBEYXRhOlwiLCBvcmdhbml6ZWREYXRhKTtcblxuICAgICAgICAgIHJldHVybiB7b3JnYW5pemVkRGF0YX07XG5cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBnZXRUaWNrZXIocmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLk1ldGFkYXRhLlN5bWJvbDtcbiAgICAgIH1cblxuICAgICAgZ2V0Q2xvc2luZ1ByaWNlcyhyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuUmVzdWx0cy5tYXAoKHJlc3VsdCkgPT4gcmVzdWx0LkNsb3NlKTtcbiAgICAgIH1cblxuICAgICAgZ2V0RGF0ZXMocmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLlJlc3VsdHMubWFwKChyZXN1bHQpID0+IHJlc3VsdC5EYXRlKTtcbiAgICAgIH1cblxuXG4gICAgYXN5bmMgb3JnYW5pemVkRGF0YShkYXRlcywgY2xvc2luZ1ByaWNlcykge1xuICAgICAgICByZXR1cm4gZGF0ZXMubWFwKChkYXRlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBEYXRlOiBuZXcgRGF0ZShEYXRlLnBhcnNlKGRhdGUpKSxcbiAgICAgICAgICAgICAgICBDbG9zZTogY2xvc2luZ1ByaWNlc1tpbmRleF0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG5cblxuXG5cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBGZXRjaFN0b2NrRGF0YTtcbiJdLCJuYW1lcyI6WyJGZXRjaFN0b2NrRGF0YSIsImNvbnN0cnVjdG9yIiwiZWxlIiwiZ2V0U3RvY2tEYXRhIiwidXJsIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJyZXNwb25zZSIsImZldGNoIiwicmVzdWx0IiwianNvbiIsInRpY2tlciIsImdldFRpY2tlciIsImNsb3NpbmdQcmljZXMiLCJnZXRDbG9zaW5nUHJpY2VzIiwiZGF0ZXMiLCJnZXREYXRlcyIsIm9yZ2FuaXplZERhdGEiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJNZXRhZGF0YSIsIlN5bWJvbCIsIlJlc3VsdHMiLCJtYXAiLCJDbG9zZSIsIkRhdGUiLCJkYXRlIiwiaW5kZXgiLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/fetch_stock_data.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teV9ibG9vbWJlcmcvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;